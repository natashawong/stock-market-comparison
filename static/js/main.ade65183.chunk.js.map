{"version":3,"sources":["Components/Header.js","util/util.js","Chart/ChartData.js","Components/StockChart.js","Overview.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","activeTab","handleClick","bind","index","this","setState","className","href","style","margin","paddingTop","onClick","id","Component","timeConverterUtil","UNIX_timestamp","timeScale","a","Date","year","getFullYear","month","getMonth","day","getDate","moment","require","yearsTill02","diff","momentManipulations","today","unix","monthBefore","subtract","six_monthBefore","yearToDate","startOf","yearBefore","five_yearBefore","maxBefore","axios","ChartData","currency","timePeriod2","timePeriod1","frequency","legendText","value","color","data","selectedCurrency","selectedTime","tempData","renderTimeAndCurrency","url","headers","Promise","all","then","spread","SA","SMX","SAprices","prices","SMXprices","i","length","SAmultiplier","close","SMXmultiplier","push","date","Math","round","SAmultiplierSGD","SMXmultiplierSGD","reverse","catch","error","console","log","getData","prevProps","left","vertical","stroke","type","dataKey","dot","minTickGap","width","axisLine","tickMargin","formatter","payload","StockChart","activeTime","activeCurrency","time","handleTimeClick","handleCurrencyClick","options","label","Overview","handleChange","selectedOption","padding","onChange","placeholder","App","Boolean","window","location","hostname","match","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ade65183.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable eqeqeq */\nimport React, {Component} from 'react';\nimport './Header.css';\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {activeTab: 0}\n    this.handleClick = this.handleClick.bind(this);\n  }  \n  \n  handleClick(index) {\n      this.setState({\n          activeTab: index\n      });\n    }\n\n    render() {\n      const name = \"Natasha\"\n     return (\n        <div className='bigBox'>\n          <div className='topNav'>\n            <span>\n              <a href=\"/\">Home</a>\n              <a href=\"/\">Support</a>\n              <a href=\"/\">{name}</a>\n            </span>\n          </div>\n\n          <div className='title'>\n          <h1 style={{margin: 0, paddingTop: 25}}>Stock Market Comparison</h1>\n          </div>\n\n          <div className='bottomNav'>\n            <a href=\"#\" onClick={() => this.handleClick(0)} className={this.state.activeTab == 0 ? \"activeTab\" : null}>Overview</a>\n            <a href=\"#\" onClick={() => this.handleClick(1)} className={this.state.activeTab == 1 ? \"activeTab\" : null}>Assets</a>\n            <a href=\"#\" onClick={() => this.handleClick(2)} className={this.state.activeTab == 2 ? \"activeTab\" : null}>Projections</a>\n            <form id=\"additionalActions\">More actions</form>\n          </div>\n        </div>\n      );\n     }\n}","export function timeConverterUtil(UNIX_timestamp, timeScale){\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var day = a.getDate();\n    var withinYTD = day + ' ' + month\n    var afterYTD = month + ' ' + year\n\n    if (timeScale === \"withinYTD\") { return withinYTD } else { return afterYTD }\n}\n\n\nvar moment = require('moment');\nconst yearsTill02 = moment().diff(moment(\"2002-01-01\"), 'years')\nexport const momentManipulations = {\n  today: moment().unix(),\n  monthBefore: moment().subtract(1, 'month').unix(),\n  six_monthBefore: moment().subtract(6, 'month').unix(),\n  yearToDate: moment().startOf('year').unix(),\n  yearBefore: moment().subtract(1, 'year').unix(),\n  five_yearBefore: moment().subtract(5, 'year').unix(),\n  maxBefore: moment().subtract(yearsTill02, 'year').unix(),\n}","import React, {Component} from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, Legend } from 'recharts';\nimport { timeConverterUtil, momentManipulations } from '../util/util';\n\nconst axios = require('axios');\n\nexport default class ChartData extends Component {    \n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        }\n    }  \n\n    // Chart options\n    currency = \"SGD\" || \"USD\"\n    timeScale = \"1d\" || \"1wk\" || \"1mo\"\n    timePeriod2 = momentManipulations.today\n    timePeriod1 = momentManipulations.monthBefore\n    frequency = \"1mo\"\n\n    renderTimeAndCurrency() {\n        this.currency = this.props.selectedCurrency === 0 ? \"SGD\" : \"USD\"\n        switch (this.props.selectedTime) {\n            // 1 month\n            case 0:\n                this.timePeriod1 = momentManipulations.monthBefore\n                this.timeScale = \"withinYTD\";\n                this.frequency = \"1d\";\n                break;\n            // 6 months\n            case 1: \n                this.timePeriod1 = momentManipulations.six_monthBefore\n                this.timeScale = \"withinYTD\";\n                this.frequency = \"1wk\"\n                break\n            // Year-to-date\n            case 2:\n                this.timePeriod1 = momentManipulations.yearToDate\n                this.timeScale = \"withinYTD\";\n                this.frequency = \"1wk\"\n                break\n            // 1 year\n            case 3:\n                this.timePeriod1 = momentManipulations.yearBefore\n                this.timeScale = \"afterYTD\";\n                this.frequency = \"1mo\"\n                break\n            // 5 years\n            case 4:\n                this.timePeriod1 = momentManipulations.five_yearBefore\n                this.timeScale = \"afterYTD\";\n                break\n            // Max\n            case 5:\n                this.timePeriod1 = momentManipulations.maxBefore\n                this.timeScale = \"afterYTD\";\n                break\n            // 1 month as default\n            default:\n                this.timePeriod1 = momentManipulations.monthBefore\n                this.timeScale = \"withinYTD\";\n                break;\n            }\n        }\n\n    getData() {\n        const tempData = []\n        this.renderTimeAndCurrency();\n        const frequency = this.frequency\n        const timePeriod1 = this.timePeriod1\n        const timePeriod2 = this.timePeriod2\n        const currency = this.currency\n\n        // API options\n        const url = \"https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-historical-data\"\n        const headers = {\n            \"content-type\":\"application/octet-stream\",\n            \"x-rapidapi-host\":\"apidojo-yahoo-finance-v1.p.rapidapi.com\",\n            \"x-rapidapi-key\":\"9e901d7e23msh1a11b2cabdd5037p1538d9jsn8030aa49c4df\"\n        }\n\n        function SAdata() {\n            return axios({\n                \"method\":\"GET\", \"url\": url, \"headers\": headers,\n                \"params\": {\n                    \"frequency\": frequency,\n                    \"filter\": \"history\",\n                    \"period1\": timePeriod1,\n                    \"period2\": timePeriod2,\n                    \"symbol\": \"AAPL\",\n                },\n            })\n        }\n\n        function VTSMX() {\n            return axios({\n                \"method\":\"GET\", \"url\": url, \"headers\": headers,\n                \"params\":{\n                    \"frequency\": frequency,\n                    \"filter\":\"history\",\n                    \"period1\":timePeriod1,\n                    \"period2\":timePeriod2,\n                    \"symbol\":\"VTSMX\"\n                }\n            })\n        } \n\n        Promise.all([SAdata(), VTSMX()])\n        .then(axios.spread((SA, SMX) => {\n            const SAprices = SA.data.prices\n            const SMXprices = SMX.data.prices\n\n            for (var i = 0; i < SMXprices.length; i++) {\n\n                if (currency === \"USD\") {\n                    // multipliers normalize to 100k\n                    const SAmultiplier = 100000/(SAprices[SAprices.length-1].close)\n                    const SMXmultiplier = 100000/(SMXprices[SMXprices.length-1].close)\n                    \n                    tempData.push({\n                        date: timeConverterUtil(SAprices[i]?.date, this.timeScale),\n                        SA: Math.round((SAprices[i]?.close) * SAmultiplier),\n                        SMX: Math.round((SMXprices[i]?.close) * SMXmultiplier),\n                    })\n\n                } else if (currency === \"SGD\") {\n                    const SAmultiplierSGD = 100000/(1.45 * (SAprices[SAprices.length-1].close))\n                    const SMXmultiplierSGD = 100000/(1.45 * (SMXprices[SMXprices.length-1].close))\n                    \n                    tempData.push({\n                        date: timeConverterUtil(SAprices[i]?.date, this.timeScale),\n                        SA: Math.round((1.45 * SAprices[i]?.close) * SAmultiplierSGD),\n                        SMX: Math.round((1.45 * SMXprices[i]?.close) * SMXmultiplierSGD),\n                    })\n                }\n            }\n\n            // API returns data from most recent to oldest, so reverse is used\n            this.setState({data: tempData.reverse()})\n        }))\n        .catch((error)=>{\n            console.log(error)\n        })\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n\tcomponentDidUpdate(prevProps) { \n        if (prevProps.selectedTime !== this.props.selectedTime || prevProps.selectedCurrency !== this.props.selectedCurrency) {\n            this.getData()\n        }\n    }\n\n    legendText = (value) => {\n        return <span style={{color: '#a8b2bb'}}>{value}</span>;\n    }\n\n\trender() {\n\t\treturn (\n            <ResponsiveContainer>\n            <LineChart data={this.state.data} margin={{left: 65}}>\n                <CartesianGrid vertical={false} stroke=\"#a8b2bb\"/>\n                <Line type=\"monotone\" dataKey=\"SA\" stroke=\"#3bb7dd\" id=\"SA\" dot={false} />\n                <Line type=\"monotone\" dataKey=\"SMX\" stroke='#dcac3d' dot={false} />\n                <XAxis dataKey=\"date\" minTickGap={5}/>\n                <YAxis width={40} axisLine={false} tickMargin={20}/>\n                <Legend \n                    formatter={this.legendText} \n                    payload={[{ value: 'Apple', color: \"#3bb7dd\", type: 'line', id:\"SA\"}, \n                    {value: 'VTSMX (Stock)', color: '#dcac3d', type: 'line', id:'SMX' }]}\n                />\n                <Tooltip />\n            </LineChart>  \n            </ResponsiveContainer>\n\t\t);\n    }\n}","/* eslint-disable eqeqeq */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport ChartData from '../Chart/ChartData';\nimport './StockChart.css'\n \nexport default class StockChart extends Component {\t\n  constructor() {\n    super()\n    this.state={\n      activeTime: 0,\n      activeCurrency: 0,\n    }\n  }\n\n  handleTimeClick(time) {\n    this.setState({activeTime: time})\n  }\n\n  handleCurrencyClick(currency) {\n    this.setState({activeCurrency: currency})\n  }\n\n    render() {\n     return (\n       <div className=\"chartContainer\">\n         <div className=\"options\">\n          <span id=\"timePeriod\">\n            <a href=\"#\" onClick={() => this.handleTimeClick(0)} className={this.state.activeTime == 0 ? \"activeOption\" : \"default\"}>1 month</a>\n            <a href=\"#\" onClick={() => this.handleTimeClick(1)} className={this.state.activeTime == 1 ? \"activeOption\" : \"default\"}>6 months</a>\n            <a href=\"#\" onClick={() => this.handleTimeClick(2)} className={this.state.activeTime == 2 ? \"activeOption\" : \"default\"}>Year-to-date</a>\n            <a href=\"#\" onClick={() => this.handleTimeClick(3)} className={this.state.activeTime == 3 ? \"activeOption\" : \"default\"}>1 year</a>\n            <a href=\"#\" onClick={() => this.handleTimeClick(4)} className={this.state.activeTime == 4 ? \"activeOption\" : \"default\"}>5 years</a>\n            <a href=\"#\" onClick={() => this.handleTimeClick(5)} className={this.state.activeTime == 5 ? \"activeOption\" : \"default\"}>Max</a>\n          </span>\n\n          <span id=\"currency\">\n            <a href=\"#\" onClick={() => this.handleCurrencyClick(0)} className={this.state.activeCurrency == 0 ? \"activeOption\" : \"default\"}>SGD</a>\n            <a href=\"#\" onClick={() => this.handleCurrencyClick(1)} className={this.state.activeCurrency == 1 ? \"activeOption\" : \"default\"}>USD</a>\n          </span>\n         </div>\n\n        <div className=\"chartInfo\">\n                <h2 style={{color: \"#a8b2bb\"}}>Portfolio value based on gross returns</h2>\n                <p style={{color: \"#a8b2bb\"}}>Gross returns sources from Yahoo Finance and exchange rates from Morningstar as of 25th March 2020</p>\n                <div className=\"chartData\">\n                  <ChartData selectedTime={this.state.activeTime} selectedCurrency={this.state.activeCurrency}/>\n                </div>\n        </div>\n\n       </div>\n      );\n    }\n  }","import React, {Component} from 'react';\nimport './Overview.css';\nimport StockChart from './Components/StockChart';\nimport Select from 'react-select';\n\n\nconst options = [\n    { value: '100s', label: \"100% VTSMX (Stock)\"},\n    { value: '40s/60b', label: \"40% VTSMX (Stock) + 60% VBMFX (Bond)\"},\n    { value: '20s/80b', label: \"20% VTSMX (Stock) + 80% VBMFX (Bond)\"},\n]\n\nexport default class Overview extends Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n            selectedOption: '',\n        }\n    }\n\n    handleChange = selectedOption => {\n        this.setState({ selectedOption });\n    };\n\n    render() {\n     return (\n         <div className=\"mainPage\">\n             <h2>Portfolio Benchmark</h2>\n\n             <div className=\"comparisonTool\">\n                <div className=\"apple\">\n                    <div style={{padding: 15}}>\n                    <h5>Benchmark Stock</h5>\n                    <h4 style={{color: \"#2f79d7\"}}>Apple Stock</h4>\n                    </div>\n                </div>\n\n                <div className=\"benchmark\">\n                    <div style={{padding: 30}}>\n                        <Select\n                            value={this.state.selectedOption}\n                            onChange={this.handleChange}\n                            options={options}\n                            placeholder={'Which benchmark do you want to compare?'}\n                        />\n                    </div>\n                </div>\n\n             </div>\n             <div>\n                <StockChart/>\n            </div>\n\n         </div>\n      )\n    }\n}","import React from 'react';\nimport Header from './Components/Header';\nimport Overview from './Overview';\n\nfunction App() {\n  return (\n    <div>\n        <Header/>\n        <Overview/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';;\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(<App/>, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}